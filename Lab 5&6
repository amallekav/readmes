**Lab 5&6**

Overview
This project is a motion detection system that uses an ESP32 microcontroller, an MPU6050 accelerometer, and gyroscope module to detect motion. The system connects to Wi-Fi to send notifications via the IFTTT webhook and monitors sensor states using ThingSpeak. A NeoPixel LED and a red LED are used for visual feedback, while the system provides notification features when motion is detected.

***Features***
Wi-Fi Connectivity: Connects to a specified Wi-Fi network.
Motion Detection: Detects motion using the MPU6050 accelerometer.
Notification System: Sends motion notifications using the IFTTT webhook.
State Monitoring: Monitors and responds to sensor states from ThingSpeak.
Calibration: Calibrates the MPU6050 for accurate motion readings.

LED Feedback:
NeoPixel LED indicates system activation.
Red LED lights up when motion is detected.
Requirements
Hardware:

ESP32 microcontroller.
MPU6050 accelerometer and gyroscope module.
NeoPixel LED (1 pixel).
Red LED.
Connecting wires and a breadboard.
Software:

MicroPython firmware installed on ESP32.
urequests library for HTTP requests.
Setup and Configuration
Wiring:

Connect the MPU6050 module to the ESP32 using I2C pins:
SCL: GPIO 14
SDA: GPIO 22
Connect the NeoPixel LED to GPIO 0.
Connect the red LED to GPIO 13.
Wi-Fi Credentials: Replace the placeholder values in the ssid and password variables with your Wi-Fi network's SSID and password.

python
Copy code
ssid = 'your_wifi_ssid'
password = 'your_wifi_password'
ThingSpeak API: Update THING_SPEAK_READ_API_URL with your ThingSpeak channel and API key.

python
Copy code
THING_SPEAK_READ_API_URL = "https://api.thingspeak.com/channels/YOUR_CHANNEL_ID/feeds.json?api_key=YOUR_API_KEY&results=2"
IFTTT Webhook: Replace the placeholder URL in IFTTT_WEBHOOK_URL with your IFTTT webhook URL.

python
Copy code
IFTTT_WEBHOOK_URL = "https://maker.ifttt.com/trigger/motion_detected/with/key/YOUR_IFTTT_KEY?value1={0}&value2={1}&value3={2}"
Flash the Code: Use a MicroPython IDE (e.g., Thonny) to upload the code to the ESP32.

How It Works
Startup:

The system initializes the MPU6050 and connects to the Wi-Fi network.
The accelerometer is calibrated for baseline values.
Monitoring:

The system continuously checks the sensor state from ThingSpeak.
If the state is 1, motion detection is activated.
If motion is detected, a notification is sent via the IFTTT webhook.
Motion Detection:

Compares accelerometer readings to calibrated values.
Detects significant deviations and triggers the red LED and notification system.
Deactivation:

If the sensor state changes to 0, the system deactivates, turning off LEDs and stopping motion detection.
User Guide
Activate the System
Change the ThingSpeak sensor state to 1 to activate motion detection.
The NeoPixel LED turns green to indicate activation.
Detect Motion
Move the MPU6050 module.
If motion exceeds the set threshold, the red LED lights up, and a notification is sent.
Deactivate the System
Change the ThingSpeak sensor state to 0 to deactivate the system.
Both LEDs turn off, and the system stops motion detection.
Troubleshooting
Wi-Fi Connection:

Ensure the Wi-Fi credentials are correct.
Check if the ESP32 is within the router's range.
No Notifications:

Verify the IFTTT webhook URL and key.
Check your internet connection.
Incorrect Motion Detection:

Recalibrate the accelerometer using the calibrate_and_get_acceleration function.
Ensure the MPU6050 is mounted securely.
Future Improvements
Add support for multiple NeoPixel LEDs for more advanced visual effects.
Implement a web interface for configuration and real-time monitoring.
Extend notification triggers to include additional events.
